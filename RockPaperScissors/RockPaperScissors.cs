using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace NisargAssignment2
{
    public partial class RockPaperScissors : Form
    {
        //creating a new variable to store the random number that we are going to generate.
        int generatednumber;
        //creating a new variable in order to store the string value of that randomly generated int.
        string numbertostring;
        //creating a new instance of Random class in order to generate the random number.
        Random r = new Random();

        public RockPaperScissors()
        {
            InitializeComponent();
        }

        /// <summary>
        /// the method generates a random number between the numbers that are passed as the parameter as well as that it stores the string value of that random generated number to the variable we created above.
        /// </summary>
        /// <param name="startnum">the lowest number that we would like the random object to generate.</param>
        /// <param name="endnum">the greatest number that we would like the random object to generate.</param>
        public void GenerateRandomNumber(int startnum, int endnum)
        {
            //this would creat a new random number between startnum and endnum and would store that in generated number variable.
            generatednumber = r.Next(startnum, endnum);

            //the if, else if and else would assign the string value we would like for the randomly generated number.
            if ( generatednumber == 1 )
            {
                numbertostring = "Rock";
            }

            else if ( generatednumber == 2 )
            {
                numbertostring = "Paper";
            }

            else
            {
                numbertostring = "Scissors";
            }
        }


        /// <summary>
        /// the method contains the logic to determine who is the winner of the game rock, paper, scissors by using a switch case scenario where
        /// we compare the computer input that has been generated by the method above with the user input.
        /// </summary>
        /// <param name="inputforrsp">this is the parameter which would provide the method with the user input.</param>
        private void RPSChoice(string inputforrsp)
        {
            //using the method above to generate a random number every time the method gets called.
            GenerateRandomNumber(1, 4);

            //using switch case in order to compare computer input with the user input.
            switch(numbertostring)
            {
                case "Rock":
                    if (inputforrsp == "Rock")
                    {
                        userPictureBox.Image = Properties.Resources.Rock;
                        compPictureBox.Image = Properties.Resources.Rock;
                        resultPictureBox.Image = Properties.Resources.Tie;
                    }

                    else if (inputforrsp == "Paper")
                    {
                        userPictureBox.Image = Properties.Resources.Paper;
                        compPictureBox.Image = Properties.Resources.Rock; 
                        resultPictureBox.Image = Properties.Resources.Win; 
                    }

                    else if (inputforrsp == "Scissors")
                    {
                        userPictureBox.Image = Properties.Resources.Scissors;
                        compPictureBox.Image = Properties.Resources.Rock;
                        resultPictureBox.Image = Properties.Resources.Lose;
                    }
                    break;

                case "Paper":

                    if (inputforrsp == "Rock")
                    {
                        userPictureBox.Image = Properties.Resources.Rock;
                        compPictureBox.Image = Properties.Resources.Paper;
                        resultPictureBox.Image = Properties.Resources.Lose;
                    }

                    else if (inputforrsp == "Paper")
                    {
                        userPictureBox.Image = Properties.Resources.Paper;
                        compPictureBox.Image = Properties.Resources.Paper;
                        resultPictureBox.Image = Properties.Resources.Tie;
                    }

                    else if (inputforrsp == "Scissors")
                    {
                        userPictureBox.Image = Properties.Resources.Scissors;
                        compPictureBox.Image = Properties.Resources.Paper;
                        resultPictureBox.Image = Properties.Resources.Win;
                    }

                    break;

                case "Scissors":
                    if (inputforrsp == "Rock")
                    {
                        userPictureBox.Image = Properties.Resources.Rock;
                        compPictureBox.Image = Properties.Resources.Scissors;
                        resultPictureBox.Image = Properties.Resources.Win;
                    }

                    else if (inputforrsp == "Paper")
                    {
                        userPictureBox.Image = Properties.Resources.Paper;
                        compPictureBox.Image = Properties.Resources.Scissors;
                        resultPictureBox.Image = Properties.Resources.Lose;
                    }

                    else if (inputforrsp == "Scissors")
                    {
                        userPictureBox.Image = Properties.Resources.Scissors;
                        compPictureBox.Image = Properties.Resources.Scissors;
                        resultPictureBox.Image = Properties.Resources.Tie;
                    }
                    break;
            }
        }

        private void rockPictureBox_Click(object sender, EventArgs e)
        {
            //this will clear the image in the picturebox if there are any.
            if (resultPictureBox.Image != null)
            {
                resultPictureBox.Image.Dispose();
                resultPictureBox.Image = null;
            }

            //This will call the RPSChoice method while passing "Rock" as an argument/user input.
            RPSChoice("Rock");
        }

        private void paperPictureBox_Click(object sender, EventArgs e)
        {
            //this will clear the image in the picturebox if there are any.
            if (resultPictureBox.Image != null)
            {
                resultPictureBox.Image.Dispose();
                resultPictureBox.Image = null;
            }

            //This will call the RPSChoice method while passing "Paper" as an argument/user input.
            RPSChoice("Paper");
        }

        private void scissorsPictureBox_Click(object sender, EventArgs e)
        {
            //this will clear the image in the picturebox if there are any.
            if (resultPictureBox.Image != null)
            {
                resultPictureBox.Image.Dispose();
                resultPictureBox.Image = null;
            }

            //This will call the RPSChoice method while passing "Scissors" as an argument/user input.
            RPSChoice("Scissors");
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //this will close the current form.
            this.Close();
        }
    }
}
